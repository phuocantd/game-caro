{"version":3,"sources":["actions/Square.js","components/Cell.js","components/Board.js","components/Button.js","components/Control-online.js","components/Chess.js","App.js","reducers/Square.js","reducers/History.js","reducers/index.js","index.js","actions/Basic.js","actions/History.js","reducers/Basic.js"],"names":["module","exports","resetSquare","type","changeSquareValue","row","col","value","changeSquareIsDark","changeSquareIsWin","connect","state","square","xIsNext","isWinner","preRowDark","dispatch","checkWinner","isWin","block","count","k","player","checkRow","checkCol","r","c","checkSlash","checkBackSlash","onClick","addItem","x","y","changePreRowDark","changeXIsNext","changeStatus","winner","changeIsWinner","setBackgroundwin","className","isDark","key","String","Array","fill","map","item","idx","fromCharCode","index","i","Cell","name","handleClick","history","resetStatus","resetXIsNext","resetIsWinner","resetPreRowDark","resetHistory","len","length","removeItem","Header","Layout","Footer","Sider","Content","status","width","App","size","initSquare","squareReducer","action","historyReducer","filter","e","reducers","combineReducers","store","createStore","compose","window","devToolsExtension","f","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50069d6f.chunk.js","sourcesContent":["function resetSquare() {\r\n  return { type: \"RESET_SQUARE\" };\r\n}\r\n\r\nfunction changeSquareValue(row, col, value) {\r\n  return { type: \"CHANGE_SQUARE_VALUE\", row, col, value };\r\n}\r\n\r\nfunction changeSquareIsDark(row, col, value) {\r\n  return { type: \"CHANGE_SQUARE_IS_DARK\", row, col, value };\r\n}\r\n\r\nfunction changeSquareIsWin(row, col, value) {\r\n  return { type: \"CHANGE_SQUARE_IS_WIN\", row, col, value };\r\n}\r\n\r\nmodule.exports = {\r\n  resetSquare,\r\n  changeSquareValue,\r\n  changeSquareIsDark,\r\n  changeSquareIsWin\r\n};\r\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addItem } from \"../actions/History\";\r\nimport {\r\n  changeSquareIsDark,\r\n  changeSquareValue,\r\n  changeSquareIsWin\r\n} from \"../actions/Square\";\r\nimport {\r\n  changePreRowDark,\r\n  changeXIsNext,\r\n  changeStatus,\r\n  changeIsWinner\r\n} from \"../actions/Basic\";\r\n\r\nfunction Cell({ row, col, square, xIsNext, isWinner, preRowDark, dispatch }) {\r\n  const checkRow = () => {\r\n    const size = 20;\r\n    let block = 0;\r\n    let count = 1;\r\n\r\n    // kiểm tra phải\r\n    let k = col + 1;\r\n    while (k < size && square[row][k].value === square[row][col].value) {\r\n      count += 1;\r\n      if (\r\n        square[row][k].value !== null &&\r\n        square[row][k].value !== square[row][col].value\r\n      ) {\r\n        block += 1;\r\n        break;\r\n      }\r\n      k += 1;\r\n    }\r\n\r\n    // kiểm tra trái\r\n    k = col - 1;\r\n    while (k >= 0 && square[row][k].value === square[row][col].value) {\r\n      count += 1;\r\n\r\n      if (\r\n        square[row][k].value !== null &&\r\n        square[row][k].value !== square[row][col].value\r\n      ) {\r\n        block += 1;\r\n        break;\r\n      }\r\n      k -= 1;\r\n    }\r\n    if (block < 2 && count === 5) {\r\n      return { player: square[row][col].value, type: 0 };\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const checkCol = () => {\r\n    const size = 20;\r\n    let block = 0;\r\n    let count = 1;\r\n\r\n    // kiểm tra trên\r\n    let k = row + 1;\r\n\r\n    while (k < size && square[k][col].value === square[row][col].value) {\r\n      count += 1;\r\n      if (\r\n        k + 1 < size &&\r\n        square[k][col].value !== null &&\r\n        square[k][col].value !== square[row][col].value\r\n      ) {\r\n        block += 1;\r\n        break;\r\n      }\r\n      k += 1;\r\n    }\r\n\r\n    // kiểm tra dưới\r\n    k = row - 1;\r\n    while (k >= 0 && square[k][col].value === square[row][col].value) {\r\n      count += 1;\r\n      if (\r\n        k >= 1 &&\r\n        square[k][col].value !== null &&\r\n        square[k][col].value !== square[row][col].value\r\n      ) {\r\n        block += 1;\r\n        break;\r\n      }\r\n      k -= 1;\r\n    }\r\n    if (block < 2 && count === 5) {\r\n      return { player: square[row][col].value, type: 1 };\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const checkSlash = () => {\r\n    const size = 20;\r\n    let block = 0;\r\n    let count = 1;\r\n    let r = row - 1;\r\n    let c = col + 1;\r\n    if (\r\n      r >= 0 &&\r\n      c < size &&\r\n      square[r][c].value !== null &&\r\n      square[r][c].value !== square[row][col].value\r\n    ) {\r\n      block += 1;\r\n    }\r\n    while (\r\n      r >= 0 &&\r\n      c < size &&\r\n      square[r][c].value === square[row][col].value\r\n    ) {\r\n      count += 1;\r\n      r -= 1;\r\n      c += 1;\r\n      if (\r\n        r >= 0 &&\r\n        c < size &&\r\n        square[r][c].value !== null &&\r\n        square[r][c].value !== square[row][col].value\r\n      ) {\r\n        block += 1;\r\n        break;\r\n      }\r\n    }\r\n    r = row + 1;\r\n    c = col - 1;\r\n    if (\r\n      r < size &&\r\n      c >= 0 &&\r\n      square[r][c].value !== null &&\r\n      square[r][c].value !== square[row][col].value\r\n    ) {\r\n      block += 1;\r\n    }\r\n    while (\r\n      r < size &&\r\n      c >= 0 &&\r\n      square[r][c].value === square[row][col].value\r\n    ) {\r\n      count += 1;\r\n      r += 1;\r\n      c -= 1;\r\n      if (\r\n        r < size &&\r\n        c >= 0 &&\r\n        square[r][c].value !== square[row][col].value &&\r\n        square[r][c].value !== null\r\n      ) {\r\n        block += 1;\r\n        break;\r\n      }\r\n    }\r\n    if (block < 2 && count === 5) {\r\n      return { player: square[row][col].value, type: 2 };\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const checkBackSlash = () => {\r\n    const size = 20;\r\n    let block = 0;\r\n    let count = 1;\r\n    let r = row - 1;\r\n    let c = col - 1;\r\n    if (\r\n      r >= 0 &&\r\n      c >= 0 &&\r\n      square[r][c].value !== null &&\r\n      square[r][c].value !== square[row][col].value\r\n    ) {\r\n      block += 1;\r\n    }\r\n    while (r >= 0 && c >= 0 && square[r][c].value === square[row][col].value) {\r\n      count += 1;\r\n      r -= 1;\r\n      c -= 1;\r\n      if (\r\n        r >= 0 &&\r\n        c >= 0 &&\r\n        square[r][c].value !== null &&\r\n        square[r][c].value !== square[row][col].value\r\n      ) {\r\n        block += 1;\r\n        break;\r\n      }\r\n    }\r\n    r = row + 1;\r\n    c = col + 1;\r\n    if (\r\n      r < size &&\r\n      c < size &&\r\n      square[r][c].value !== null &&\r\n      square[r][c].value !== square[row][col].value\r\n    ) {\r\n      block += 1;\r\n    }\r\n    while (\r\n      r < size &&\r\n      c < size &&\r\n      square[r][c].value === square[row][col].value\r\n    ) {\r\n      count += 1;\r\n      r += 1;\r\n      c += 1;\r\n      if (\r\n        r < size &&\r\n        c < size &&\r\n        square[r][c].value !== null &&\r\n        square[r][c].value !== square[row][col].value\r\n      ) {\r\n        block += 1;\r\n        break;\r\n      }\r\n    }\r\n    if (block < 2 && count === 5) {\r\n      return { player: square[row][col].value, type: 3 };\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const checkWinner = () => {\r\n    let isWin = checkRow(row, col);\r\n    if (isWin !== null) {\r\n      return isWin;\r\n    }\r\n    isWin = checkCol(row, col);\r\n    if (isWin !== null) {\r\n      return isWin;\r\n    }\r\n    isWin = checkSlash(row, col);\r\n    if (isWin !== null) {\r\n      return isWin;\r\n    }\r\n    isWin = checkBackSlash(row, col);\r\n    if (isWin !== null) {\r\n      return isWin;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const setBackgroundwin = winner => {\r\n    const size = 20;\r\n    let k = 0;\r\n    let r = 0;\r\n    let c = 0;\r\n\r\n    dispatch(changeSquareIsDark(row, col, false));\r\n    dispatch(changeSquareIsWin(row, col, true));\r\n    switch (winner.type) {\r\n      case 0:\r\n        k = col + 1;\r\n        while (k < size && square[row][k].value === square[row][col].value) {\r\n          dispatch(changeSquareIsWin(row, k, true));\r\n          k += 1;\r\n        }\r\n        k = col - 1;\r\n        while (k >= 0 && square[row][k].value === square[row][col].value) {\r\n          dispatch(changeSquareIsWin(row, k, true));\r\n          k -= 1;\r\n        }\r\n        break;\r\n      case 1:\r\n        k = row + 1;\r\n        while (k < size && square[k][col].value === square[row][col].value) {\r\n          dispatch(changeSquareIsWin(k, col, true));\r\n          k += 1;\r\n        }\r\n        k = row - 1;\r\n        while (k >= 0 && square[k][col].value === square[row][col].value) {\r\n          dispatch(changeSquareIsWin(k, col, true));\r\n          k -= 1;\r\n        }\r\n        break;\r\n      case 2:\r\n        r = row - 1;\r\n        c = col + 1;\r\n        while (\r\n          r >= 0 &&\r\n          c < size &&\r\n          square[r][c].value === square[row][col].value\r\n        ) {\r\n          dispatch(changeSquareIsWin(r, c, true));\r\n          r -= 1;\r\n          c += 1;\r\n        }\r\n        r = row + 1;\r\n        c = col - 1;\r\n        while (\r\n          r < size &&\r\n          c >= 0 &&\r\n          square[r][c].value === square[row][col].value\r\n        ) {\r\n          dispatch(changeSquareIsWin(r, c, true));\r\n          r += 1;\r\n          c -= 1;\r\n        }\r\n        break;\r\n      case 3:\r\n        r = row - 1;\r\n        c = col - 1;\r\n        while (\r\n          r >= 0 &&\r\n          c >= 0 &&\r\n          square[r][c].value === square[row][col].value\r\n        ) {\r\n          dispatch(changeSquareIsWin(r, c, true));\r\n          r -= 1;\r\n          c -= 1;\r\n        }\r\n        r = row + 1;\r\n        c = col + 1;\r\n        while (\r\n          r < size &&\r\n          c < size &&\r\n          square[r][c].value === square[row][col].value\r\n        ) {\r\n          dispatch(changeSquareIsWin(r, c, true));\r\n          r += 1;\r\n          c += 1;\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const clickSquare = () => {\r\n    // const size = 20;\r\n\r\n    if (square[row][col].value || isWinner) {\r\n      return;\r\n    }\r\n    // them lich su buoc di\r\n    dispatch(addItem(row, col, !xIsNext ? \"X\" : \"O\"));\r\n    // thay doi mau vi tri hien tai\r\n    dispatch(changeSquareIsDark(preRowDark.x, preRowDark.y, false));\r\n    dispatch(changeSquareIsDark(row, col, true));\r\n    // thay doi vi tri danh\r\n    dispatch(changePreRowDark(row, col));\r\n    // thay doi gia tri ban co\r\n    dispatch(changeSquareValue(row, col, xIsNext ? \"X\" : \"O\"));\r\n    // thay doi vi tri danh tiep va status\r\n    dispatch(changeXIsNext(!xIsNext));\r\n    dispatch(changeStatus(`Next player: ${xIsNext ? \"O\" : \"X\"}`));\r\n\r\n    const winner = checkWinner();\r\n    if (winner) {\r\n      dispatch(changeIsWinner(true));\r\n      dispatch(changeStatus(`Winner: ${xIsNext ? \"X\" : \"O\"}`));\r\n      setBackgroundwin(winner);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <td\r\n      onClick={clickSquare}\r\n      className={`tbl-cell ${square[row][col].isDark ? \"square-click\" : \"\"} ${\r\n        square[row][col].isWin ? \"square-win\" : \"\"\r\n      }`}\r\n    >\r\n      {square[row][col].value}\r\n    </td>\r\n  );\r\n}\r\n\r\nexport default connect(state => {\r\n  return {\r\n    square: state.square,\r\n    xIsNext: state.xIsNext,\r\n    isWinner: state.isWinner,\r\n    preRowDark: state.preRowDark\r\n  };\r\n})(Cell);\r\n","/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Cell from \"./Cell\";\r\n\r\nfunction Board({ square }) {\r\n  return (\r\n    <table className=\"tbl-board\">\r\n      <tbody>\r\n        <tr key={String(-1)}>\r\n          {Array(21)\r\n            .fill(null)\r\n            .map((item, idx) => (\r\n              <td className=\"tbl-cell\" key={String(idx + 1)}>\r\n                {idx > 0 ? String.fromCharCode(idx + 64) : \"\"}\r\n              </td>\r\n            ))}\r\n        </tr>\r\n        {square.map((item, index) => {\r\n          return (\r\n            <tr key={String(index)}>\r\n              <td className=\"tbl-cell\" key={String(-1)}>\r\n                {index + 1}\r\n              </td>\r\n              {item.map((i, idx) => (\r\n                <Cell\r\n                  key={String(index * 20 + idx)}\r\n                  row={index}\r\n                  col={idx}\r\n                />\r\n              ))}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default connect(state => {\r\n  return { square: state.square };\r\n})(Board);\r\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\nimport React from \"react\";\r\n\r\nexport default function Cell({ name, handleClick }) {\r\n  const clickButton = () => {\r\n    handleClick();\r\n  };\r\n\r\n  return (\r\n    <button type=\"button\" className=\"btn-click\" onClick={clickButton}>\r\n      {name}\r\n    </button>\r\n  );\r\n}\r\n","/* eslint-disable no-useless-return */\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Button from \"./Button\";\r\nimport {\r\n  resetStatus,\r\n  resetXIsNext,\r\n  resetIsWinner,\r\n  resetPreRowDark,\r\n  changeStatus,\r\n  changePreRowDark\r\n} from \"../actions/Basic\";\r\nimport {\r\n  resetSquare,\r\n  changeSquareValue,\r\n  changeSquareIsDark\r\n} from \"../actions/Square\";\r\nimport { resetHistory, removeItem } from \"../actions/History\";\r\n\r\nfunction Control({ dispatch, history, isWinner }) {\r\n  const reset = () => {\r\n    dispatch(resetStatus());\r\n    dispatch(resetXIsNext());\r\n    dispatch(resetIsWinner());\r\n    dispatch(resetPreRowDark());\r\n    dispatch(resetHistory());\r\n    dispatch(resetSquare());\r\n  };\r\n\r\n  const undo = () => {\r\n    const len = history.length;\r\n    if (len === 0 || isWinner) {\r\n      return;\r\n    }\r\n\r\n    dispatch(changeSquareValue(history[len - 1].x, history[len - 1].y, null));\r\n    dispatch(changeSquareIsDark(history[len - 1].x, history[len - 1].y, false));\r\n    if (len - 2 >= 0) {\r\n      dispatch(\r\n        changeSquareIsDark(history[len - 2].x, history[len - 2].y, true)\r\n      );\r\n      dispatch(changePreRowDark(history[len - 2].x, history[len - 2].y));\r\n    }\r\n    dispatch(changeStatus(`Next player: ${history[len - 2].player}`));\r\n    dispatch(removeItem(len - 1));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button name=\"Reset\" handleClick={reset} />\r\n      <Button name=\"Undo\" handleClick={undo} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default connect(state => {\r\n  return {\r\n    history: state.history,\r\n    isWinner: state.isWinner\r\n  };\r\n})(Control);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport Board from \"./Board\";\r\nimport Control from \"./Control-online\";\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nfunction Chess({ status }) {\r\n\r\n  return (\r\n    <div>\r\n      <Layout>\r\n        <Header>\r\n          <div className=\"status\">{status}</div>\r\n        </Header>\r\n        <Layout>\r\n          <Content className=\"light\">\r\n            <center>\r\n              <Board />\r\n            </center>\r\n          </Content>\r\n          <Sider width={400} className=\"light\">\r\n            <center>\r\n              <Control />\r\n            </center>\r\n          </Sider>\r\n        </Layout>\r\n        <Footer>Coppyright by phuocantd</Footer>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(state => {\r\n  return { status: state.status };\r\n})(Chess);\r\n","import React from \"react\";\r\nimport Chess from \"./components/Chess\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return <Chess size={20} />;\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable no-param-reassign */\r\nconst initSquare = new Array(20)\r\n  .fill(null)\r\n  .map(() =>\r\n    new Array(20)\r\n      .fill(null)\r\n      .map(() => ({ value: null, isDark: false, isWin: false }))\r\n  );\r\n\r\nconst squareReducer = (state = initSquare, action) => {\r\n  switch (action.type) {\r\n    case \"RESET_SQUARE\":\r\n      return new Array(20)\r\n        .fill(null)\r\n        .map(() =>\r\n          new Array(20)\r\n            .fill(null)\r\n            .map(() => ({ value: null, isDark: false, isWin: false }))\r\n        );\r\n    case \"CHANGE_SQUARE_VALUE\":\r\n      state[action.row][action.col].value = action.value;\r\n      return [...state];\r\n    case \"CHANGE_SQUARE_IS_DARK\":\r\n      state[action.row][action.col].isDark = action.value;\r\n      return [...state];\r\n    case \"CHANGE_SQUARE_IS_WIN\":\r\n      state[action.row][action.col].isWin = action.value;\r\n      return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default squareReducer;\r\n","const historyReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_ITEM\":\r\n      return [...state, { x: action.x, y: action.y, player: action.player }];\r\n    case \"RESET_HISTORY\":\r\n      return [];\r\n    case \"REMOVE_ITEM\":\r\n      return state.filter((e, i) => i !== action.index);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default historyReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport square from \"./Square\";\r\nimport { status, xIsNext, isWinner, preRowDark } from \"./Basic\";\r\nimport history from './History'\r\n\r\nconst reducers = combineReducers({\r\n  square,\r\n  status,\r\n  xIsNext,\r\n  isWinner,\r\n  preRowDark,\r\n  history\r\n});\r\n\r\nexport default reducers;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    compose(window.devToolsExtension ? window.devToolsExtension() : f => f)\r\n  );\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n","function changeStatus(value) {\r\n  return { type: \"CHANGE_STATUS\", value };\r\n}\r\n\r\nfunction changeXIsNext(value) {\r\n  return { type: \"CHANGE_X_IS_NEXT\", value };\r\n}\r\n\r\nfunction changeIsWinner(value) {\r\n  return { type: \"CHANGE_IS_WINNER\", value };\r\n}\r\n\r\nfunction changePreRowDark(x, y) {\r\n  return { type: \"CHANGE_PRE_ROW_DARK\", x, y };\r\n}\r\n\r\nfunction resetStatus() {\r\n  return { type: \"RESET_STATUS\" };\r\n}\r\n\r\nfunction resetXIsNext() {\r\n  return { type: \"RESET_X_IS_NEXT\" };\r\n}\r\n\r\nfunction resetIsWinner() {\r\n  return { type: \"RESET_IS_WINNER\" };\r\n}\r\n\r\nfunction resetPreRowDark() {\r\n  return { type: \"RESET_PRE_ROW_DARK\" };\r\n}\r\n\r\nmodule.exports = {\r\n  changeStatus,\r\n  changeXIsNext,\r\n  changeIsWinner,\r\n  changePreRowDark,\r\n  resetStatus,\r\n  resetXIsNext,\r\n  resetIsWinner,\r\n  resetPreRowDark\r\n};\r\n","function addItem(x, y, player) {\r\n  return { type: \"ADD_ITEM\", x, y, player };\r\n}\r\n\r\nfunction resetHistory() {\r\n  return { type: \"RESET_HISTORY\" };\r\n}\r\n\r\nfunction removeItem(index) {\r\n  return { type: \"REMOVE_ITEM\", index };\r\n}\r\n\r\nmodule.exports = { addItem, resetHistory,removeItem };\r\n","const statusReducer = (state = \"Next player: X\", action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_STATUS\":\r\n      return action.value;\r\n    case \"RESET_STATUS\":\r\n      return \"Next player: X\";\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst xIsNextReducer = (state = true, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_X_IS_NEXT\":\r\n      return action.value;\r\n    case \"RESET_X_IS_NEXT\":\r\n      return true;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst isWinnerReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_IS_WINNER\":\r\n      return action.value;\r\n    case \"RESET_IS_WINNER\":\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst preRowDarkReducer = (state = { x: 0, y: 0 }, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_PRE_ROW_DARK\":\r\n      return { x: action.x, y: action.y };\r\n    case \"RESET_PRE_ROW_DARK\":\r\n      return { x: 0, y: 0 };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  status: statusReducer,\r\n  xIsNext: xIsNextReducer,\r\n  isWinner: isWinnerReducer,\r\n  preRowDark: preRowDarkReducer\r\n};\r\n"],"sourceRoot":""}